Description: >
    server template script for Udacity ALX-T Cloud DevOps Engineering Nanodegree Scholarship Project 2

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:

  RootRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Path: "/"
  RolePolicies: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "root"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles: 
        - Ref: "RootRole"

  RootInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - Ref: "RootRole"

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
         #!/bin/bash
              sudo apt-get update -y
              sudo apt-get install apache2 -y
              sudo systemctl start apache2.service
              xdg-open https://my992008361880b1.s3.us-west-2.amazonaws.com/index.html?response-content-disposition=inline&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEI3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCWV1LXdlc3QtMyJIMEYCIQDIO8lTHbOeaGkupHFXA%2F8sRSipWFqwc14g53QjDXMh6gIhAKgJkDRT3pRmVdBS9sIap7SA6B3JTxAymTiNjORX4nSWKvECCJX%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQAhoMOTkyMDA4MzYxODgwIgyLnfD40Wfnk9d08WsqxQKpCsk73T%2FQt8LT8M7WYA1%2BG6H52h2vlT9Ky3J%2FiyOmsnMLAUpA2sfeY1uegrEL%2FX8ZsSFwlamy6uhR7rS8mkXsIn%2Fn%2Bgoo8Cfp%2F%2BOXJA6ki1V8r9NcixcALUfLp2S1EApfwdIV%2BbtSwebMq2cXv6FxH5ibM4jRd%2BHFq%2B5uVbEzBmEUwqCDga%2BcJWUUiaE0fnWuc79%2FJe7DAToTjsXzstUyOgGlQfVTwd7dbjkOYE8M18vMrHskfAXnQGpMpJ46%2F6MRy3THgnngl4VFkvcxyPISlEpx9rRUlP8tyMlZUxu6IhvGHSsbHGhe%2BGAu7AgOw1AtrC1ngwJK6ugyR2h9xHcllY7Tsvh6L9LQykis3UXFl5s6gg%2F4iX1oJlDxYIkqJfRYimfHx5ZUG30gJ%2BFid5r%2FOhnumhqfrttAG4%2F1czpuo6Yh0ms0MI2lo5UGOrICx76JbfAAJW2AlL1cpMyhAb%2BhE3MMNeEcM8h91nSleS3fAf8e64wvFSdwUtbFCKzsNbKEzdiyxBKv3jBGjI1fpXzhVOQjkwTD0yKELk4v9kuX2QrbLaHjrGEB%2FHB19bKdyw9JpmE6jq6i%2FGN4G2zGCBhSpKy5uzAcMTlhkUGVTgCRAuQ2s%2BQYduB%2FAErC8UO4sWQKeNLa643vBz6f86Cclnafh5w2Ry7gCVEhIdWRXxdOgA8U2cUzC00oIPLig2Blc%2FHHMWLn0I7LcFDPlKrO1bfY64hh5EeWmpkmFGXNpRQp1myH8AsbAlCexW1RrWV9Ouv39C32%2FU7GYpPEErPTZvecSq0MGUtdc2Un8luOZv7dGCMKTm0WC7eqY0N%2BA%2FMdCdeHSGDrGr2GefHG4pWacmvc&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220614T202144Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIA6N6COK6MEJJJGPPL%2F20220614%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Signature=b43a0cf6e94b94a65f50fcf76e2912a448e6f44f60d2a3ba66cd4875f366b7f4
      # AMI ID of Ubuntu Linux machine deployed.
      ImageId: ami-0cfa91bdbc3be780c

      SecurityGroups:
      - Ref: WebServerSecurityGroup
      InstanceType: t2.micro
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
  
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '3'
      MaxSize: '5'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
  
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
